<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--多列的数据模板-->
    <DataTemplate x:Key="multipleTable_Clomns">
        <WrapPanel Width="Auto" Height="Auto">
            <TextBlock MinWidth="90" Text="{Binding PlcLogicAddr1}"  HorizontalAlignment="Center" TextAlignment="Center" />
            <!--<Border Background="Black" Width="1" Height="20"/>-->
            <TextBlock MinWidth="90" Text="{Binding PlcLogicAddr2}" HorizontalAlignment="Center" TextAlignment="Center"/>
        </WrapPanel>
    </DataTemplate>

    <!--整行的样式-->
    <Style TargetType="DataGridRow">
        <Setter Property="MinHeight" Value="35" />
        <Setter Property="Background" Value="White"/>
        <Style.Triggers>
            <!--鼠标滑过-->
            <!--<Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="#0140A2" Opacity="0.8"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>-->
            <!--AlternationCount="2"时的奇数行风格-->
            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                <Setter Property="Background" Value="WhiteSmoke"/>
            </Trigger>
            <!--选中一行-->
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#0140A2"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--列标题样式-->
    <Style TargetType="DataGridColumnHeader">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="28" />
        <Setter Property="Foreground" Value="#323433" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>

    <!--单元格文本框居中 样式-->
    <Style TargetType="DataGridCell">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <TextBlock TextAlignment="Center"
                               VerticalAlignment="Center">
                        <ContentPresenter/>
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--整体样式-->
    <Style TargetType="DataGrid">
        <!--手动生成表格内容-->
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <!--允许调整列宽-->
        <Setter Property="CanUserResizeColumns" Value="True"/>
        <!--禁止拖动列内容-->
        <Setter Property="CanUserReorderColumns" Value="false"/>
        <!--禁止添加行，消除最后一行的多余显示-->
        <Setter Property="CanUserAddRows" Value="false"/>
        <!--禁止排序-->
        <Setter Property="CanUserSortColumns" Value="false"/>
        <!--虚拟化行 减少通讯开销-->
        <Setter Property="EnableRowVirtualization" Value="True"/>
        <!--首列冻结-->
        <Setter Property="FrozenColumnCount" Value="0"/>
        <!--显示网格线-->
        <Setter Property="GridLinesVisibility" Value="All"/>
        <!--屏蔽最左侧的行标题-->
        <Setter Property="HeadersVisibility" Value="Column"/>
        <!--定义成员个数为2，以便偶数行和奇数行风格不一致-->
        <Setter Property="AlternationCount" Value="2"/>
        <!--外边框颜色-->
        <Setter Property="BorderBrush" Value="#DFE2E5" />
        <!--字体颜色-->
        <Setter Property="Foreground" Value="#676A6C" />
        <!--网格线颜色-->
        <Setter Property="HorizontalGridLinesBrush" Value="#A0A1A3"/>
        <Setter Property="VerticalGridLinesBrush" Value="#A0A1A3"/>
    </Style>

</ResourceDictionary>
<!--
<Style.Triggers>
    <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="Black" Opacity="1"/>
            </Setter.Value>
        </Setter>
    </Trigger>
</Style.Triggers>-->